// Examples for how to reason about source code

// Files and folders

directory "/".
directory "/etc", parent "/", name "etc".
directiry "/home", parent "/", name "home".
directiry "/home/user", parent "/home", name "user".
sourcefile "/home/user/file1.cpp", parent "/home/user", name "file1.cpp", basename "file1", extension "cpp".

// Types
namespace @global-namespace has name "".
class @c1, name "MyClass", parent @global-namespace.

builtin numeric type @int has name "int".
method @m1, class @c1, name "foo", return-type @int.
parameter @m1-0, position 0, method @m1, name "x", type @c1.
parameter @m1-1 has position 1, method @m1, name "y", type @string.

// a 5-ary predicate.
@m2-2 is a parameter with position 2, method @m1, name "z", type @float.

// Source code

expression statement @s1, parent @s2, position 0.

// This unpacks to:
@s1 is an expression.
@s1 is a statement.
@s1 has parent @m1.
@s1 has position 0.

block statement @s2, parent @m1.

// Special way to make an anonymous entity.
variable-access expression _, name "x", variable @m1-0, location @l0, parent @e1, position 0.

plus expression @e1, parent @s1.

expression e is arithmetic-expression if 
    plus e or
    minus e or
    times e or
    divide e.

// Source locations
location @l0, file "/home/calum/foo.c", start-line 0, end-line 0, start-column 1, end-column 10.
